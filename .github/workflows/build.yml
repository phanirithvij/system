on:
  push:
    branches: [main]
  workflow_dispatch:
  # cron: weekly

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Free space:"
          df -h
      # https://github.com/workflow/dotfiles/blob/main/.github/workflows/nixos.yml
      - name: "Maximize Disk Space"
        run: |
          sudo rm -rf $AGENT_TOOLSDIRECTORY
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/share/powershell
          sudo rm -rf /usr/local/share/chromium
          sudo rm -rf /usr/local/lib/node_modules
          sudo rm -rf /usr/local/lib/heroku
          sudo rm -rf /var/lib/docker/overlay2
          sudo rm -rf /home/linuxbrew
          sudo rm -rf /home/runner/.rustup
      - uses: actions/checkout@v4
      - name: tailscale use iron as builder
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          version: 1.70.0
       # enables flakes, nix-command, sets runner as trusted user
      - uses: DeterminateSystems/nix-installer-action@v12
        with:
          extra-conf: |
            substituters = http://iron:5000
            trusted-public-keys = iron:RiBHQE6zmBos9J6DRbp+9WvUZGYotzFO0JC4om94R24=
      # TODO sandbox relax only for dprint plugins possible?
      # TODO file an issue in treefmt-nix repo about dprint plugins
      - uses: DeterminateSystems/magic-nix-cache-action@main

      # crazy thing, magic-nix-cache runs on top of attic
      # - name: Debugging with browser
      #   uses: fawazahmed0/action-debug@v2
      # https://sourcegraph.com/github.com/osdev-wiki/wiki/-/blob/.github/workflows/sitegen.yml?L43:13-43:25
      - name: cache dependency builds
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/nix/
          key: ${{ runner.os }}
      #- run: nix flake check
      - run: nix fmt
      - run: nix profile install .#system-manager
      - run: sudo $(which system-manager) switch --flake .#gha
      #- run: system-manager build --flake .#gha
      - run: system-manager build --flake .#vps
      - run: nix build .#devShells.x86_64-linux.default
      - run: nix build .#nixosConfigurations.iron.config.system.build.toplevel
      - run: nix build .#homeConfigurations."rithvij@iron".activationPackage
      - run: nix build .#homeConfigurations."rithviz@rithviz-inspiron7570".activationPackage
      - run: nix run .#nix -- flake show
      #- run: nix build .#homeConfigurations."runner".activationPackage
      #- run: nix build .#homeConfigurations."root@vpshostname".activationPackage
      #- name: keypair for nix-serve and run
      #  shell: bash
      #  run: |
      #    source .github/scripts/nix-serve.sh >/dev/null 2>&1
      #- run: nix profile install nixpkgs#cloudflared
      ## optionally configure a fixed cloudflare tunnel endpoint (requires login)
      ## - name: configure cloudflare tunnel endpoint
      #- name: expose nix-serve server
      #  run: |
      #    cloudflared tunnel --url http://localhost:5000 > cloudflared.log 2>&1 &
      #- run: .github/scripts/loop.sh
      #  shell: bash
