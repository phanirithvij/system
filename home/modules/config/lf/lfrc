### Adapted from old manjaro config https://github.com/phanirithvij/dotfiles-yadm/blob/main/.config/lf/lfrc

### Zoxide

cmd z %{{
	result="$(zoxide query --exclude $PWD $@ | sed 's/\\/\\\\/g;s/"/\\"/g')"
	lf -remote "send $id cd \"$result\""
}}

cmd zi ${{
	result="$(zoxide query -i | sed 's/\\/\\\\/g;s/"/\\"/g')"
	lf -remote "send $id cd \"$result\""
}}

### Starship

cmd on-cd &{{
	zoxide add "$PWD"

	export STARSHIP_SHELL=
	fmt="$(starship prompt)%w/%f"
	lf -remote "send $id set promptfmt \"$fmt\""
}}

# === Trash === [[[
# TODO checkout github.com/oberblastmeister/trashy which has fzf examples in their readme

# lfrc https://github.com/gokcehan/lf/issues/579#issuecomment-1015633229
cmd fzf-restore ${{
  ids="$(echo -ne '\n'              | \
    trash-restore                   | \
    awk '$1 ~ /^[0-9]+/ {print $0}' | \
    fzf --multi                     | \
    awk '{print $1}'                | \
    sed -z 's/\n/,/g;s/,$/\n/')"
  echo $ids | trash-restore
  clear
}}

map U fzf-restore

# https://github.com/gokcehan/lf/issues/873#issuecomment-1186223702
set ifs "\n"
cmd trash %{{
    for f in $fx; do
        trash-put "$f"
    done
}}
map <delete> :trash

# ]]] === Trash ===


# === Archives === [[[

cmd telesplitcompresspremium ${{
    for f in $fx; do
        echo 7z a -v4000m "$f.7z" "$f"
        7z a -v4000m "$f.7z" "$f"
    done
}}
cmd telesplitstorepremium ${{
    for f in $fx; do
        echo 7z a -v4000m -mx=0 "$f.7z" "$f"
        7z a -v4000m -mx=0 "$f.7z" "$f"
    done
}}
cmd telesplitcompress ${{
    for f in $fx; do
        echo 7z a -v2000m "$f.7z" "$f"
        7z a -v2000m "$f.7z" "$f"
    done
}}
cmd telesplitstore ${{
    for f in $fx; do
        echo 7z a -v2000m -mx=0 "$f.7z" "$f"
        7z a -v2000m -mx=0 "$f.7z" "$f"
    done
}}

# ]]] === Archives ===

# === Micellaneous === [[[

set hiddenfiles oooyeahbaaby!

map <c-z> $ kill -STOP $PPID
map e $$EDITOR "$f"
map <enter> $bash -c "nvim \"$f\""
map <c-q> quit
map <c-g> $navi
map <c-j> $navi -p .

cmd newfold ${{
    set -f
    printf "Directory name: "
    read newd
    mkdir -- "$newd"
    mv -- $fx "$newd"
}}
map <a-n> newfold

# ]]] === Micellaneous ===

### ripgrep Search
# https://github.com/gokcehan/lf/wiki/Integrations#ripgrep
cmd fzf_search ${{
    res="$( \
        RG_PREFIX="rg --column --line-number --no-heading --color=always \
            --smart-case "
        FZF_DEFAULT_COMMAND="$RG_PREFIX ''" \
            fzf --bind "change:reload:$RG_PREFIX {q} || true" \
            --ansi --layout=reverse --header 'Search in files' \
            | cut -d':' -f1
    )"
    [ ! -z "$res" ] && lf -remote "send $id select \"$res\""
}}
map gs :fzf_search

# https://github.com/gokcehan/lf/wiki/Integrations#fzf
cmd fzf_jump ${{
    res="$(find . -maxdepth 1 | fzf --reverse --header='Jump to location' | sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ] ; then
        cmd="cd"
    elif [ -f "$res" ] ; then
        cmd="select"
    else
        exit 0
    fi
    lf -remote "send $id $cmd \"$res\""
}}
map <c-f> :fzf_jump

### Symlinks

map <backspace2> :updir

cmd follow_link %{{
  lf -remote "send ${id} select '$(readlink $f)'"
}}
map gL follow_link

# y (select for copy) and P to paste soft-link
# d (select for cut) and P to paste hard-link
cmd link %{{
    set -- $(cat ~/.local/share/lf/files)
    mode="$1"
    shift
    if [ "$#" -lt 1 ]; then
        lf -remote "send $id echo no files to link"
        exit 0
    fi
    case "$mode" in
        # symbolically copy mode is indicating a soft link
        copy) ln -sr -t . -- "$@";;
        # while a move mode is indicating a hard link
        move) ln -t . -- "$@";;
    esac
    rm ~/.local/share/lf/files
    lf -remote "send clear"
}}
map P :link


### Resize hooks

cmd recol ${{
    w=$(tput cols)
    if [ $w -le 80 ]; then
        lf -remote "send $id set ratios 1:2"
    elif [ $w -le 145 ]; then
        lf -remote "send $id set ratios 1:2:3"
    else
        lf -remote "send $id set ratios 1:2:3:5"
    fi
}}

:recol
map <c-r> :recol :reload

# dragon drop using blobdrop
# https://sourcegraph.com/search?q=context:global+file:lfrc+dragon&patternType=standard&sm=1
cmd dragon %blobdrop -x all $fx
cmd dragon-stay %blobdrop $fx
cmd dragon-individual %blobdrop $fx

# Dragon Mapping
map Dd dragon
map Ds dragon-stay
map Di dragon-individual

### TODO
# bat or ctpv as previewer
# TODO: read https://github.com/gokcehan/lf/wiki/Tips and customize
# Also http://0x0.st/ is mentioned in the tips which is opensource and can be self hosted
# Tagging
#   https://sourcegraph.com/github.com/lmburns/dotfiles/-/blob/.config/lf/lfrc?subtree=true
#   https://github.com/phanirithvij/dotfiles-yadm/blob/6279f5dfd07369c3b34a46f29d12baaa39b97b86/.config/lf/lfrc#L17C1-L17C90
