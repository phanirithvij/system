commit c3689fd82c274a38d99d5160dfc6611b319a4b17
Author: phanirithvij <phanirithvij2000@gmail.com>
Date:   Tue Dec 24 16:16:32 2024 +0530

    save
    
    Signed-off-by: phanirithvij <phanirithvij2000@gmail.com>

diff --git a/pkgs/by-name/fz/fzf/package.nix b/pkgs/by-name/fz/fzf/package.nix
index a0a218db10bd..498e832fef8c 100644
--- a/pkgs/by-name/fz/fzf/package.nix
+++ b/pkgs/by-name/fz/fzf/package.nix
@@ -20,6 +20,10 @@ buildGoModule rec {
     hash = "sha256-WEdCa6Krj+VicB1vxWzyY1rCHvmaL4t2njhhjq0Bppw=";
   };
 
+  patches = [
+    ./sad.patch
+  ];
+
   vendorHash = "sha256-utHQzXjtdnshUsYDQEQY2qoQGZsnfXXPj3A9VsDj0vQ=";
 
   env.CGO_ENABLED = 0;
diff --git a/pkgs/by-name/fz/fzf/sad.patch b/pkgs/by-name/fz/fzf/sad.patch
new file mode 100644
index 000000000000..9d0e5071770c
--- /dev/null
+++ b/pkgs/by-name/fz/fzf/sad.patch
@@ -0,0 +1,84 @@
+diff --git a/shell/key-bindings.bash b/shell/key-bindings.bash
+index 2da32cbab672..4a7bb9945158 100644
+--- a/shell/key-bindings.bash
++++ b/shell/key-bindings.bash
+@@ -25,34 +25,59 @@ __fzf_defaults() {
+   echo "${FZF_DEFAULT_OPTS-} $2"
+ }
+ 
+-__fzf_select__() {
+-  FZF_DEFAULT_COMMAND=${FZF_CTRL_T_COMMAND:-} \
+-  FZF_DEFAULT_OPTS=$(__fzf_defaults "--reverse --walker=file,dir,follow,hidden --scheme=path" "${FZF_CTRL_T_OPTS-} -m") \
+-  FZF_DEFAULT_OPTS_FILE='' $(__fzfcmd) "$@" |
+-    while read -r item; do
+-      printf '%q ' "$item"  # escape special chars
+-    done
+-}
+-
+ __fzfcmd() {
+   [[ -n "${TMUX_PANE-}" ]] && { [[ "${FZF_TMUX:-0}" != 0 ]] || [[ -n "${FZF_TMUX_OPTS-}" ]]; } &&
+     echo "fzf-tmux ${FZF_TMUX_OPTS:--d${FZF_TMUX_HEIGHT:-40%}} -- " || echo "fzf"
+ }
+ 
+-fzf-file-widget() {
+-  local selected="$(__fzf_select__ "$@")"
+-  READLINE_LINE="${READLINE_LINE:0:$READLINE_POINT}$selected${READLINE_LINE:$READLINE_POINT}"
+-  READLINE_POINT=$(( READLINE_POINT + ${#selected} ))
++# Override defaults for improved ctrl-t experience
++__fzf_find() {
++  command ls -1t $1;
++  command find -L $1 -mindepth 2 \( -path '*/\.*' -o -fstype 'sysfs' -o -fstype 'devfs' -o -fstype 'devtmpfs' -o -fstype 'proc' \) -prune \
++  -o -type f -printf '%P\n' \
++  -o -type d -printf '%P\n' \
++  -o -type l -printf '%P\n' 2> /dev/null
+ }
+ 
+-__fzf_cd__() {
+-  local dir
+-  dir=$(
+-    FZF_DEFAULT_COMMAND=${FZF_ALT_C_COMMAND:-} \
+-    FZF_DEFAULT_OPTS=$(__fzf_defaults "--reverse --walker=dir,follow,hidden --scheme=path" "${FZF_ALT_C_OPTS-} +m") \
+-    FZF_DEFAULT_OPTS_FILE='' $(__fzfcmd)
+-  ) && printf 'builtin cd -- %q' "$(builtin unset CDPATH && builtin cd -- "$dir" && builtin pwd)"
++__fzf_select__() {
++  local cmd opts
++  local dir=$1
++  shift
++  cmd="${FZF_CTRL_T_COMMAND:-"__fzf_find $dir"}"
++  opts="--height ${FZF_TMUX_HEIGHT:-40%} --bind=ctrl-z:ignore --reverse $FZF_DEFAULT_OPTS $FZF_CTRL_T_OPTS -m"
++  eval "$cmd" |
++    FZF_DEFAULT_OPTS="$opts" $(__fzfcmd) "$@" |
++    while read -r item; do
++      if [ "$dir" == "." ]; then
++        printf '%q ' "$item"  # escape special chars
++      else
++        printf '%q/%q ' "$dir" "$item"
++      fi
++    done
++}
++
++fzf-file-widget() {
++  local trailing_spaces=$(echo -n "${READLINE_LINE:0:$READLINE_POINT}" | sed "s/^.*\S//")
++  local word=$(echo -n "${READLINE_LINE:0:$READLINE_POINT}" | sed "s/\s*$//"| awk '{print $NF}')
++  local dir=$(echo "${word/#\~/$HOME}" | sed "s#/\+#/#g; s#/\$##")
++  if [[ $READLINE_POINT -eq 0 || -n "$trailing_spaces" || ! -d "$dir" ]]; then
++    local maybe_space=""
++    [[ $READLINE_POINT -gt 0 && -z "$trailing_spaces" ]] && maybe_space=" "
++    local selected="$(__fzf_select__ . "$@")"
++    if [ -n "$selected" ]; then
++      READLINE_LINE="${READLINE_LINE:0:$READLINE_POINT}$maybe_space$selected${READLINE_LINE:$READLINE_POINT}"
++      READLINE_POINT=$((READLINE_POINT + ${#maybe_space} + ${#selected}))
++    fi
++  else
++    local selected="$(__fzf_select__ "$dir" "$@")"
++    if [ -n "$selected" ]; then
++      local pre_word=$((READLINE_POINT - ${#word}))
++      READLINE_LINE="${READLINE_LINE:0:$pre_word}$selected${READLINE_LINE:$READLINE_POINT}"
++      READLINE_POINT=$((pre_word + ${#selected}))
++    fi
++  fi
+ }
++# end of non default section
+ 
+ if command -v perl > /dev/null; then
+   __fzf_history__() {
